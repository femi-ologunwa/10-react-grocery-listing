{"version":3,"sources":["List.js","Alert.js","App.js","index.js"],"names":["List","items","removeItem","editItem","className","map","item","id","title","key","type","onClick","Alert","msg","removeAlert","list","useEffect","timeout","setTimeout","clearTimeout","App","useState","name","setName","localStorage","getItem","JSON","parse","setList","isEditing","setIsEditing","editID","setEditID","show","alert","setAlert","showAlert","setItem","stringify","onSubmit","e","preventDefault","newItem","Date","getTime","toString","placeholder","value","onChange","target","length","filter","specificItem","find","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.303f58de.chunk.js","sourcesContent":["import React from 'react';\nimport { FaEdit, FaTrash } from 'react-icons/fa';\n\nconst List = ({ items, removeItem, editItem }) => {\n   return (\n      <div className='grocery-list'>\n         {items.map((item) => {\n            const { id, title } = item;\n            return (\n               <article key={id} className='grocery-item'>\n                  <p className='title'>{title}</p>\n                  <div className='button-container'>\n                     <button\n                        type='button'\n                        className='edit-btn'\n                        onClick={() => editItem(id)}\n                     >\n                        <FaEdit />\n                     </button>\n                     <button\n                        type='button'\n                        className='delete-btn'\n                        onClick={() => removeItem(id)}\n                     >\n                        <FaTrash />\n                     </button>\n                  </div>\n               </article>\n            );\n         })}\n      </div>\n   );\n};\n\nexport default List;\n","import React, { useEffect } from 'react';\n\nconst Alert = ({ msg, type, removeAlert, list }) => {\n   useEffect(() => {\n      const timeout = setTimeout(() => {\n         removeAlert();\n      }, 3000);\n      return () => {\n         clearTimeout(timeout);\n      };\n   }, [list]);\n\n   return <p className={`alert alert-${type}`}>{msg}</p>;\n};\n\nexport default Alert;\n\n//Every time the list changes, we want to get the new timeout eventhough the timeout of the previous alert message might not have been exhausted\n\n//That is once something changes on the list, we immediately clear the old timeout and set a new one.\n","import React, { useState, useEffect } from 'react';\nimport List from './List';\nimport Alert from './Alert';\n\nconst getLocalStorage = () => {\n   let list = localStorage.getItem('list');\n   if (list) {\n      return JSON.parse(localStorage.getItem('list'));\n   } else {\n      return [];\n   }\n};\n\nfunction App() {\n   const [name, setName] = useState('');\n   const [list, setList] = useState(getLocalStorage());\n   const [isEditing, setIsEditing] = useState(false);\n   const [editID, setEditID] = useState('');\n   const [alert, setAlert] = useState({\n      show: false,\n      msg: '',\n      type: '',\n   });\n\n   const handleSubmit = (e) => {\n      e.preventDefault();\n\n      //is form empty on submit\n      if (!name) {\n         showAlert(true, 'danger', 'please enter value');\n      }\n\n      //is an item being edited\n      else if (name && isEditing) {\n         setList(\n            list.map((item) => {\n               if (item.id === editID) {\n                  //edit only the title of the item; leave other properties as they are\n                  return { ...item, title: name };\n               }\n               return item;\n            })\n         );\n         setName('');\n         setEditID(null);\n         setIsEditing(false);\n         showAlert(true, 'success', 'value changed');\n      }\n\n      //add item to list of items\n      else {\n         showAlert(true, 'success', 'item added to the list');\n         const newItem = { id: new Date().getTime().toString(), title: name };\n         setList([...list, newItem]);\n         setName('');\n      }\n   };\n\n   const showAlert = (show = false, type = '', msg = '') => {\n      setAlert({ show, type, msg });\n   };\n\n   const clearList = () => {\n      showAlert(true, 'danger', 'empty list');\n      setList([]);\n   };\n\n   const removeItem = (id) => {\n      showAlert(true, 'danger', 'item removed');\n      setList(list.filter((item) => item.id !== id));\n   };\n\n   const editItem = (id) => {\n      const specificItem = list.find((item) => item.id === id);\n      setIsEditing(true);\n      setEditID(id);\n      setName(specificItem.title);\n   };\n\n   //store in the local storage the latest changes to the list\n   useEffect(() => {\n      localStorage.setItem('list', JSON.stringify(list));\n   }, [list]);\n\n   return (\n      <section className='section-center'>\n         <form className='grocery-form' onSubmit={handleSubmit}>\n            {alert.show && (\n               <Alert {...alert} removeAlert={showAlert} list={list} />\n            )}\n            <h3>grocery list</h3>\n            <div className='form-control'>\n               <input\n                  type='text'\n                  className='grocery'\n                  placeholder='e.g. eggs'\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n               />\n               <button type='submit' className='submit-btn'>\n                  {isEditing ? 'edit' : 'submit'}\n               </button>\n            </div>\n         </form>\n\n         {list.length > 0 && (\n            <div className='grocery-container'>\n               <List items={list} removeItem={removeItem} editItem={editItem} />\n               <button className='clear-btn' onClick={clearList}>\n                  clear items\n               </button>\n            </div>\n         )}\n      </section>\n   );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}